//https://leetcode.com/problems/add-two-numbers-ii/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
 
 		ListNode* newL1 = reverseLinkedList(l1);
 		ListNode* newL2 = reverseLinkedList(l2);

 
 		ListNode* dummy = new ListNode(0);
 		ListNode* p = dummy;
 		int carry = 0;
 		while (newL1 != nullptr || newL2 != nullptr || carry != 0)
 		{
 			int sum = (newL1 == nullptr ? 0 : newL1->val) + (newL2 == nullptr ? 0 : newL2->val) + carry;

 			carry = sum / 10;

 			dummy->next = new ListNode(sum % 10);
 			dummy = dummy->next;

 			if (newL1 != nullptr) {
 				newL1 = newL1->next;
 			}

 			if (newL2 != nullptr) {
 				newL2 = newL2->next;
 			}
 		}

 		ListNode* result = p->next;
 		p->next = nullptr;

 		return reverseLinkedList(result);
 	}

 	ListNode* reverseLinkedList(ListNode* head)
 	{
 		if (head == nullptr || head->next == nullptr) return head;

 		ListNode* nxt = head->next;
 		head->next = nullptr;
 		ListNode* newHead = reverseLinkedList(nxt);

 		nxt->next = head;

 		return newHead;
 	}
 };
